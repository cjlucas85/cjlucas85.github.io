<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python2 on Chad Lucas</title>
    <link>https://cjlucas85.github.io/tags/python2/</link>
    <description>Recent content in Python2 on Chad Lucas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 22 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://cjlucas85.github.io/tags/python2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python: Functional Short-circuit Evaluation</title>
      <link>https://cjlucas85.github.io/blog/python-functional-short-circuit-evaluation/</link>
      <pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cjlucas85.github.io/blog/python-functional-short-circuit-evaluation/</guid>
      <description>Recently, I made an interesting connection between some of Python&amp;rsquo;s builtin functions and generators. A common pattern in a project appeared where I needed to handle an increasing number different things needed to be checked in a string with a possible variety of approaches to be made. This resulted in the following pattern:
def check1(x): return x &amp;gt; 10 def check2(x): return x &amp;gt; 20 def check3(x): return x &amp;gt; 30 # .</description>
    </item>
    
  </channel>
</rss>